// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.2
// source: currency.proto

package currency

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Currencies int32

const (
	Currencies_EUR Currencies = 0
	Currencies_USD Currencies = 1
	Currencies_GBP Currencies = 2
	Currencies_JPY Currencies = 3
	Currencies_RUB Currencies = 4
	Currencies_AUD Currencies = 5
	Currencies_CAD Currencies = 6
	Currencies_CHF Currencies = 7
	Currencies_CNY Currencies = 8
	Currencies_HKD Currencies = 9
	Currencies_NZD Currencies = 10
	Currencies_SEK Currencies = 11
	Currencies_KRW Currencies = 12
	Currencies_SGD Currencies = 13
	Currencies_NOK Currencies = 14
	Currencies_MXN Currencies = 15
	Currencies_INR Currencies = 16
	Currencies_RON Currencies = 17
	Currencies_IDR Currencies = 18
	Currencies_BRL Currencies = 19
	Currencies_ZAR Currencies = 20
	Currencies_PHP Currencies = 21
	Currencies_CZK Currencies = 22
	Currencies_DKK Currencies = 23
	Currencies_HUF Currencies = 24
	Currencies_ILS Currencies = 25
	Currencies_PLN Currencies = 26
	Currencies_THB Currencies = 27
	Currencies_TRY Currencies = 28
	Currencies_MYR Currencies = 29
)

// Enum value maps for Currencies.
var (
	Currencies_name = map[int32]string{
		0:  "EUR",
		1:  "USD",
		2:  "GBP",
		3:  "JPY",
		4:  "RUB",
		5:  "AUD",
		6:  "CAD",
		7:  "CHF",
		8:  "CNY",
		9:  "HKD",
		10: "NZD",
		11: "SEK",
		12: "KRW",
		13: "SGD",
		14: "NOK",
		15: "MXN",
		16: "INR",
		17: "RON",
		18: "IDR",
		19: "BRL",
		20: "ZAR",
		21: "PHP",
		22: "CZK",
		23: "DKK",
		24: "HUF",
		25: "ILS",
		26: "PLN",
		27: "THB",
		28: "TRY",
		29: "MYR",
	}
	Currencies_value = map[string]int32{
		"EUR": 0,
		"USD": 1,
		"GBP": 2,
		"JPY": 3,
		"RUB": 4,
		"AUD": 5,
		"CAD": 6,
		"CHF": 7,
		"CNY": 8,
		"HKD": 9,
		"NZD": 10,
		"SEK": 11,
		"KRW": 12,
		"SGD": 13,
		"NOK": 14,
		"MXN": 15,
		"INR": 16,
		"RON": 17,
		"IDR": 18,
		"BRL": 19,
		"ZAR": 20,
		"PHP": 21,
		"CZK": 22,
		"DKK": 23,
		"HUF": 24,
		"ILS": 25,
		"PLN": 26,
		"THB": 27,
		"TRY": 28,
		"MYR": 29,
	}
)

func (x Currencies) Enum() *Currencies {
	p := new(Currencies)
	*p = x
	return p
}

func (x Currencies) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currencies) Descriptor() protoreflect.EnumDescriptor {
	return file_currency_proto_enumTypes[0].Descriptor()
}

func (Currencies) Type() protoreflect.EnumType {
	return &file_currency_proto_enumTypes[0]
}

func (x Currencies) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Currencies.Descriptor instead.
func (Currencies) EnumDescriptor() ([]byte, []int) {
	return file_currency_proto_rawDescGZIP(), []int{0}
}

type RateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        Currencies `protobuf:"varint,1,opt,name=Base,proto3,enum=Currencies" json:"Base,omitempty"`
	Destination Currencies `protobuf:"varint,2,opt,name=Destination,proto3,enum=Currencies" json:"Destination,omitempty"`
}

func (x *RateRequest) Reset() {
	*x = RateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_currency_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateRequest) ProtoMessage() {}

func (x *RateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_currency_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateRequest.ProtoReflect.Descriptor instead.
func (*RateRequest) Descriptor() ([]byte, []int) {
	return file_currency_proto_rawDescGZIP(), []int{0}
}

func (x *RateRequest) GetBase() Currencies {
	if x != nil {
		return x.Base
	}
	return Currencies_EUR
}

func (x *RateRequest) GetDestination() Currencies {
	if x != nil {
		return x.Destination
	}
	return Currencies_EUR
}

type RateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        Currencies `protobuf:"varint,1,opt,name=Base,proto3,enum=Currencies" json:"Base,omitempty"`
	Destination Currencies `protobuf:"varint,2,opt,name=Destination,proto3,enum=Currencies" json:"Destination,omitempty"`
	Rate        float64    `protobuf:"fixed64,3,opt,name=Rate,proto3" json:"Rate,omitempty"`
}

func (x *RateResponse) Reset() {
	*x = RateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_currency_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateResponse) ProtoMessage() {}

func (x *RateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_currency_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateResponse.ProtoReflect.Descriptor instead.
func (*RateResponse) Descriptor() ([]byte, []int) {
	return file_currency_proto_rawDescGZIP(), []int{1}
}

func (x *RateResponse) GetBase() Currencies {
	if x != nil {
		return x.Base
	}
	return Currencies_EUR
}

func (x *RateResponse) GetDestination() Currencies {
	if x != nil {
		return x.Destination
	}
	return Currencies_EUR
}

func (x *RateResponse) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

var File_currency_proto protoreflect.FileDescriptor

var file_currency_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5d, 0x0a, 0x0b, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x72, 0x0a, 0x0c, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x52,
	0x61, 0x74, 0x65, 0x2a, 0x9a, 0x02, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x55, 0x52, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x55,
	0x53, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x42, 0x50, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x4a, 0x50, 0x59, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x55, 0x42, 0x10, 0x04, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x55, 0x44, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x44, 0x10,
	0x06, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x48, 0x46, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4e,
	0x59, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x4b, 0x44, 0x10, 0x09, 0x12, 0x07, 0x0a, 0x03,
	0x4e, 0x5a, 0x44, 0x10, 0x0a, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x4b, 0x10, 0x0b, 0x12, 0x07,
	0x0a, 0x03, 0x4b, 0x52, 0x57, 0x10, 0x0c, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x47, 0x44, 0x10, 0x0d,
	0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f, 0x4b, 0x10, 0x0e, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x58, 0x4e,
	0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x52, 0x10, 0x10, 0x12, 0x07, 0x0a, 0x03, 0x52,
	0x4f, 0x4e, 0x10, 0x11, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x44, 0x52, 0x10, 0x12, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x52, 0x4c, 0x10, 0x13, 0x12, 0x07, 0x0a, 0x03, 0x5a, 0x41, 0x52, 0x10, 0x14, 0x12,
	0x07, 0x0a, 0x03, 0x50, 0x48, 0x50, 0x10, 0x15, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x5a, 0x4b, 0x10,
	0x16, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x4b, 0x4b, 0x10, 0x17, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x55,
	0x46, 0x10, 0x18, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4c, 0x53, 0x10, 0x19, 0x12, 0x07, 0x0a, 0x03,
	0x50, 0x4c, 0x4e, 0x10, 0x1a, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x48, 0x42, 0x10, 0x1b, 0x12, 0x07,
	0x0a, 0x03, 0x54, 0x52, 0x59, 0x10, 0x1c, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x59, 0x52, 0x10, 0x1d,
	0x32, 0x65, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x11, 0x5a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_currency_proto_rawDescOnce sync.Once
	file_currency_proto_rawDescData = file_currency_proto_rawDesc
)

func file_currency_proto_rawDescGZIP() []byte {
	file_currency_proto_rawDescOnce.Do(func() {
		file_currency_proto_rawDescData = protoimpl.X.CompressGZIP(file_currency_proto_rawDescData)
	})
	return file_currency_proto_rawDescData
}

var file_currency_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_currency_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_currency_proto_goTypes = []interface{}{
	(Currencies)(0),      // 0: Currencies
	(*RateRequest)(nil),  // 1: RateRequest
	(*RateResponse)(nil), // 2: RateResponse
}
var file_currency_proto_depIdxs = []int32{
	0, // 0: RateRequest.Base:type_name -> Currencies
	0, // 1: RateRequest.Destination:type_name -> Currencies
	0, // 2: RateResponse.Base:type_name -> Currencies
	0, // 3: RateResponse.Destination:type_name -> Currencies
	1, // 4: Currency.GetRate:input_type -> RateRequest
	1, // 5: Currency.SubscribeRates:input_type -> RateRequest
	2, // 6: Currency.GetRate:output_type -> RateResponse
	2, // 7: Currency.SubscribeRates:output_type -> RateResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_currency_proto_init() }
func file_currency_proto_init() {
	if File_currency_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_currency_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_currency_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_currency_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_currency_proto_goTypes,
		DependencyIndexes: file_currency_proto_depIdxs,
		EnumInfos:         file_currency_proto_enumTypes,
		MessageInfos:      file_currency_proto_msgTypes,
	}.Build()
	File_currency_proto = out.File
	file_currency_proto_rawDesc = nil
	file_currency_proto_goTypes = nil
	file_currency_proto_depIdxs = nil
}
